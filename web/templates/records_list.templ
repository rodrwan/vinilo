package templates

import (
	"fmt"
	"github.com/rodrwan/vinilo/internal/models"
)

// RecordsList muestra la lista de vinilos
templ RecordsList(records []*models.Record, total int, page int, searchTerm string) {
	@Layout("Catálogo") {
	<div class="min-h-screen relative">
		<!-- Background with Glassmorphism -->
		<div class="absolute inset-0 z-0">
			<!-- Gradient Background -->
			<div class="absolute inset-0 bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900"></div>
			
			<!-- Animated Background Elements -->
			<div class="absolute inset-0 overflow-hidden">
				<!-- Floating Vinyl Records -->
				<div class="absolute top-20 left-10 w-32 h-32 bg-white/5 backdrop-blur-md rounded-full border border-white/10 animate-pulse"></div>
				<div class="absolute top-40 right-20 w-24 h-24 bg-white/5 backdrop-blur-md rounded-full border border-white/10 animate-pulse" style="animation-delay: 1s;"></div>
				<div class="absolute bottom-40 left-20 w-20 h-20 bg-white/5 backdrop-blur-md rounded-full border border-white/10 animate-pulse" style="animation-delay: 2s;"></div>
				<div class="absolute bottom-20 right-10 w-28 h-28 bg-white/5 backdrop-blur-md rounded-full border border-white/10 animate-pulse" style="animation-delay: 0.5s;"></div>
				
				<!-- Musical Notes -->
				<div class="absolute top-32 left-1/4 text-white/10 text-4xl animate-bounce">♪</div>
				<div class="absolute top-48 right-1/3 text-white/10 text-3xl animate-bounce" style="animation-delay: 0.5s;">♫</div>
				<div class="absolute bottom-32 left-1/3 text-white/10 text-5xl animate-bounce" style="animation-delay: 1s;">♩</div>
				<div class="absolute bottom-48 right-1/4 text-white/10 text-3xl animate-bounce" style="animation-delay: 1.5s;">♪</div>
			</div>
			
			<!-- Overlay -->
			<div class="absolute inset-0 bg-black/30 backdrop-blur-sm"></div>
		</div>

		<!-- Content with Glassmorphism -->
		<div class="relative z-10 min-h-screen pb-20">
			<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
				<!-- Header -->
				<div class="text-center mb-12">
					<div class="backdrop-blur-md bg-white/10 p-8 rounded-3xl border border-white/20 inline-block">
						<h1 class="text-5xl md:text-6xl font-display font-bold text-white mb-4 tracking-tight">
							CATALOGUE
						</h1>
						<p class="text-xl font-handwritten text-white/80 tracking-wide">
							{fmt.Sprintf("%d+ vinyl records", total)}
						</p>
					</div>
				</div>

				<!-- Search Bar -->
				<div class="max-w-md mx-auto mb-12">
					<form action="/records" method="GET" class="relative">
						<div class="backdrop-blur-md bg-white/10 rounded-full border border-white/20 p-2">
							<input 
								type="text" 
								name="search"
								placeholder="Buscar vinilos..." 
								value={searchTerm}
								class="w-full px-6 py-4 bg-transparent rounded-full border-none focus:outline-none text-lg text-white placeholder-white/60 tracking-wide"
							/>
							<button type="submit" class="absolute right-4 top-1/2 transform -translate-y-1/2 text-white/60 hover:text-white transition-colors">
								<svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
								</svg>
							</button>
						</div>
					</form>
				</div>

				<!-- Records Grid -->
				<div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-8">
					for _, record := range records {
						@RecordCard(record)
					}
				</div>

				<!-- Pagination -->
				if len(records) > 0 {
					<div class="flex justify-center mt-12">
						<div class="backdrop-blur-md bg-white/10 p-4 rounded-2xl border border-white/20">
							<div class="flex space-x-2">
								if page > 1 {
									<a href={fmt.Sprintf("/records?page=%d&search=%s", page-1, searchTerm)} class="px-4 py-2 bg-white/20 backdrop-blur-md rounded-lg border border-white/30 hover:bg-white/30 transition-colors text-white tracking-wide">
										Anterior
									</a>
								}
								<span class="px-4 py-2 bg-gradient-to-r from-primary-red to-primary-orange text-white rounded-lg backdrop-blur-md tracking-wide">
									Página {fmt.Sprintf("%d", page)}
								</span>
								if len(records) == 12 {
									<a href={fmt.Sprintf("/records?page=%d&search=%s", page+1, searchTerm)} class="px-4 py-2 bg-white/20 backdrop-blur-md rounded-lg border border-white/30 hover:bg-white/30 transition-colors text-white tracking-wide">
										Siguiente
									</a>
								}
							</div>
						</div>
					</div>
				}
			</div>
		</div>
	</div>
	}
}

// RecordCard muestra una tarjeta individual de vinilo
templ RecordCard(record *models.Record) {
	<a href={templ.SafeURL("/records/" + record.ID)} class="group block">
		<div class="backdrop-blur-md bg-white/10 rounded-2xl border border-white/20 hover:bg-white/20 transition-all duration-300 overflow-hidden shadow-lg hover:shadow-xl">
			<!-- Vinyl Record Image -->
			<div class="relative aspect-square bg-gradient-to-br from-gray-100/10 to-gray-200/10 p-6">
				<div class="w-full h-full backdrop-blur-md bg-white/20 rounded-full relative overflow-hidden border border-white/30">
					<img
						src={record.GetArtworkURL()}
						alt={record.GetDisplayTitle()}
						class="w-full h-full object-cover rounded-full group-hover:scale-105 transition-transform duration-300"
						loading="lazy"
					/>
				</div>
				
				<!-- Action buttons overlay -->
				<div class="absolute top-4 right-4 flex space-x-2 opacity-0 group-hover:opacity-100 transition-opacity">
					<button class="w-10 h-10 bg-primary-red rounded-full flex items-center justify-center shadow-lg hover:scale-110 transition-transform backdrop-blur-md">
						<svg class="w-5 h-5 text-white" fill="currentColor" viewBox="0 0 24 24">
							<path d="M8 5v14l11-7z"/>
						</svg>
					</button>
					<button class="w-10 h-10 bg-white/20 backdrop-blur-md rounded-full flex items-center justify-center shadow-lg hover:scale-110 transition-transform border border-white/30">
						<svg class="w-5 h-5 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
							<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"/>
						</svg>
					</button>
				</div>
			</div>

			<!-- Record Info -->
			<div class="p-6">
				<div class="flex justify-between items-start mb-3">
					<div class="flex-1">
						<h3 class="font-bold text-lg text-white group-hover:text-primary-red transition-colors tracking-wide">
							{record.GetDisplayArtist()}
						</h3>
						<p class="text-sm text-white/70 mt-1 tracking-wide">
							{record.GetDisplayTitle()}
						</p>
					</div>
					<div class="text-right">
						<p class="text-2xl font-bold text-primary-red tracking-wide">
							$25
						</p>
					</div>
				</div>
				
				<!-- Record details -->
				<div class="text-xs text-white/50 space-y-1">
					if record.Anio.Valid {
						<p class="tracking-wide">{fmt.Sprintf("%d", record.Anio.Int32)}</p>
					}
					if record.Generos.Valid {
						<p class="tracking-wide">{record.Generos.String}</p>
					}
				</div>
			</div>
		</div>
	</a>
}